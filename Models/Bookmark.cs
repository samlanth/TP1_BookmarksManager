//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TP1_BookmarksManager.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Bookmark
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Url { get; set; }
        public int UserId { get; set; }
        public bool Shared { get; set; }
        public Nullable<int> CategoryId { get; set; }

        public virtual Category Category { get; set; }
        public virtual User User { get; set; }

        public static Bookmark FromBookmarkView(BookmarkView bookmarkView)
        {
            Bookmark bookmark = new Bookmark();
            bookmark.Id = bookmarkView.Id;
            bookmark.Name = bookmarkView.Name;
            bookmark.Url = bookmarkView.Url;
            bookmark.Shared = bookmarkView.Shared;
            bookmark.UserId = bookmarkView.OwnerId;
            bookmark.CategoryId = bookmarkView.CategoryId;
            return bookmark;
        }
        public BookmarkView CreateBookmarkView()
        {
            BookmarkView bookmarkView = new BookmarkView();
            bookmarkView.Id = Id;
            bookmarkView.Name = Name;
            bookmarkView.Url = Url;
            bookmarkView.Shared = Shared;
            bookmarkView.OwnerId = UserId;
            bookmarkView.CategoryId = CategoryId;
            return bookmarkView;
        }
        public void UpdateWithBookmarkView(BookmarkView bookmarkView)
        {
            Id = bookmarkView.Id;
            Name = bookmarkView.Name;
            Url = bookmarkView.Url;
            Shared = bookmarkView.Shared;
            UserId = bookmarkView.OwnerId;
            CategoryId = bookmarkView.CategoryId;
        }
        public void UpdateWithBookmark(Bookmark bookmark)
        {
            Id = bookmark.Id;
            Name = bookmark.Name;
            Url = bookmark.Url;
            Shared = bookmark.Shared;
            UserId = bookmark.UserId;
            CategoryId = bookmark.CategoryId;
        }
        public void Update(Bookmark bookmark)
        {
            Id = bookmark.Id;
            Name = bookmark.Name;
            Url = bookmark.Url;
            Shared = bookmark.Shared;
            UserId = bookmark.UserId;
            CategoryId = bookmark.CategoryId;
        }
    }
    public class BookmarkView
    {
        public int Id { get; set; }

        [Required]
        [MaxLength(32)]
        public string Name { get; set; }

        [Required]
        [MaxLength(128)]
        [DataType(DataType.Url)]
        public string Url { get; set; }

        [Required]
        public bool Shared { get; set; }

        public int OwnerId { get; set; }
        public Nullable<int> CategoryId { get; set; }
        public string newCategory { get; set; }
    }
    public class BookmarkItemView
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Url { get; set; }
        public string OwnerShip { get; set; }
        public string OwnerEmail { get; set; }
        public string Category { get; set; }
        public bool AllowEdit { get; set; }
        public BookmarkItemView() { }
        public BookmarkItemView(BookmarksDBEntities DB, Bookmark bookmark, User viewer)
        {
            Id = bookmark.Id;
            Name = bookmark.Name;
            Url = bookmark.Url;
            if (bookmark.CategoryId != 0)
            {
                Category category = DB.Categories.Find(bookmark.CategoryId);
                if (category != null)
                {
                    Category = category.Name;
                }
            }
            else
            {
                Category = "";
            }

            AllowEdit = (viewer.Admin) || (bookmark.UserId == viewer.Id);
            if (bookmark.UserId == viewer.Id)
            {
                OwnerShip = (bookmark.Shared ? "Shared" : "Private");
                OwnerEmail = "";
            }
            else
            {
                User ownerUser = DB.Users.Find(bookmark.UserId);
                if (ownerUser != null)
                {
                    OwnerShip = ownerUser.GetFullName();
                    OwnerEmail = ownerUser.Email;
                }
            }
        }
    }
}